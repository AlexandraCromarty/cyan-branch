generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model User {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  email         String @unique
  passwordHash  String?
  name          String?
  image         String?
  emailVerified DateTime?

  // Relations
  boxes Box[]
  accounts Account[]
  sessions Session[]
}

model Box {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  adminId     String   @db.ObjectId
  name        String
  description String
  createdAt   DateTime @default(now())

  // Relations
  admin       User         @relation(fields: [adminId], references: [id])
  submissions Submission[]
}

model Submission {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  boxId     String   @db.ObjectId
  message   String
  response  String?
  createdAt DateTime @default(now())

  // Relations
  box Box @relation(fields: [boxId], references: [id])
}

model Account {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?     @db.Int
  token_type         String?  @db.String
  scope              String?  @db.String
  id_token           String?  @db.String
  session_state      String?  @db.String

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}